name: Test, Create Image, Publish to Azure

on:
  push

jobs:
  build_and_publish:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: admin2024
          POSTGRES_PASSWORD: p4662024!
          POSTGRES_DB: primes
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 1s --health-timeout 5s --health-retries 5
    env:
      VERSION: ${{ secrets.SERVICE_VERSION }}
      REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME}}
      REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      DATASOURCE_UN: ${{ secrets.SPRING_DATASOURCE_UN }}
      DATASOURCE_PW: ${{ secrets.SPRING_DATASOURCE_PW }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Give mvnw execute permissions
        run: chmod +x ./mvnw

      - name: Build the package
        run: ./mvnw --batch-mode -DskipTests clean package
      - name: Run the unit tests
        run: ./mvnw --batch-mode -Dmaven.test.failure.ignore=true test
        env:
          SPRING_DATASOURCE_URL: "jdbc:postgresql://localhost:5432/primes"
          SPRING_DATASOURCE_USERNAME: "admin2024"
          SPRING_DATASOURCE_PASSWORD: "p4662024!"

      - name: Report the result of the unit tests
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true
      # Build the Docker image
      - name: Build the docker image
        run: ./scripts/build-image.sh

      # Publish the Docker image to GitHub Container Registry
      - name: Publish to Github container registry
        run: ./scripts/push-to-ghcr.sh

      - name: Publish to Azure container registry
        run: ./scripts/push-to-acr.sh


      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
      - name: Deploy
        run: ./scripts/deploy.sh


